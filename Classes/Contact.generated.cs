#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using TinyMapperTests;

namespace TinyMapperTests	
{
	[System.Serializable()]
	public partial class Contact : IDataErrorInfo, INotifyPropertyChanging, INotifyPropertyChanged, System.Runtime.Serialization.ISerializable
	{
		private int _id;
		[System.ComponentModel.DataAnnotations.Required()]
		[System.ComponentModel.DataAnnotations.Key()]
		public virtual int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if(this._id != value)
				{
					this.OnPropertyChanging("Id");
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		private string _address;
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public virtual string Address
		{
			get
			{
				return this._address;
			}
			set
			{
				if(this._address != value)
				{
					this.OnPropertyChanging("Address");
					this._address = value;
					this.OnPropertyChanged("Address");
				}
			}
		}
		
		private string _phone;
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public virtual string Phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if(this._phone != value)
				{
					this.OnPropertyChanging("Phone");
					this._phone = value;
					this.OnPropertyChanged("Phone");
				}
			}
		}
		
		private int _typeID;
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual int TypeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if(this._typeID != value)
				{
					this.OnPropertyChanging("TypeID");
					this._typeID = value;
					this.OnPropertyChanged("TypeID");
				}
			}
		}
		
		private int _personID;
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual int PersonID
		{
			get
			{
				return this._personID;
			}
			set
			{
				if(this._personID != value)
				{
					this.OnPropertyChanging("PersonID");
					this._personID = value;
					this.OnPropertyChanged("PersonID");
				}
			}
		}
		
		private ContactType _contactType;
		public virtual ContactType ContactType
		{
			get
			{
				return this._contactType;
			}
			set
			{
				if(this._contactType != value)
				{
					this.OnPropertyChanging("ContactType");
					this._contactType = value;
					this.OnPropertyChanged("ContactType");
				}
			}
		}
		
		private Person _person;
		public virtual Person Person
		{
			get
			{
				return this._person;
			}
			set
			{
				if(this._person != value)
				{
					this.OnPropertyChanging("Person");
					this._person = value;
					this.OnPropertyChanged("Person");
				}
			}
		}
		
		#region IDataErrorInfo members
		
		private string error = string.Empty;
		public string Error
		{
			get
			{
				return this.error;
			}
		}
		
		public string this[string propertyName]
		{
			get
			{
				this.ValidatePropertyInternal(propertyName, ref this.error);
		
				return this.error;
			}
		}
		
		protected virtual void ValidatePropertyInternal(string propertyName, ref string error)
		{
		    this.ValidateProperty(propertyName, ref error);
		}
		
		// Please implement this method in a partial class in order to provide the error message depending on each of the properties.
		partial void ValidateProperty(string propertyName, ref string error);
		
		#endregion
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region ISerializable Implementation
		
		public Contact()
		{
		}
		
		protected Contact(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
		{
			this.Id = info.GetInt32("Id");
			this.Address = info.GetString("Address");
			this.Phone = info.GetString("Phone");
			this.TypeID = info.GetInt32("TypeID");
			this.PersonID = info.GetInt32("PersonID");
			CustomizeDeserializationProcess(info, context);
		}
		
		public virtual void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
		{
			info.AddValue("Id", this.Id, typeof(int));
			info.AddValue("Address", this.Address, typeof(string));
			info.AddValue("Phone", this.Phone, typeof(string));
			info.AddValue("TypeID", this.TypeID, typeof(int));
			info.AddValue("PersonID", this.PersonID, typeof(int));
			CustomizeSerializationProcess(info, context);
		}
		
		partial void CustomizeSerializationProcess(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
		partial void CustomizeDeserializationProcess(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
		#endregion
	}
}
#pragma warning restore 1591
